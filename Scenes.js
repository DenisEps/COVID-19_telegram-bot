const { Telegraf } = require('telegraf')

const { Markup } = Telegraf
const session = require('telegraf/session')
const Stage = require('telegraf/stage')
const Scene = require('telegraf/scenes/base')

class ScenesGenerator {
  nameScene() {
    const name = new Scene('name')
    name.enter((ctx) => {
      ctx.reply('–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?')
    })
    name.on('text', async (ctx) => {
      const name = ctx.message.text
      if (name) {
        await ctx.reply(`–ü—Ä–∏–≤–µ—Ç ${name}`)
        ctx.session.name = name
        await ctx.scene.leave()
      }
    })
  }

  ageScene() {
    const age = new Scene('age')
    age.enter((ctx) => {
      ctx.reply('–¢–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç?')
    })
    age.on('text', async (ctx) => {
      const age = Number(ctx.message.text)
      if (age) {
        await ctx.reply('–û–∫ —Å–ø–∞—Å–∏–±–æ')
        ctx.session.age = age
        await ctx.scene.leave()
      }
    })
  }

  statsScene() {
    const stats = new Scene('stats')

    stats.enter((ctx) => {
      ctx.telegram.sendMessage(ctx.chat.id,
        `<b>–ü—Ä–∏–≤–µ—Ç ${ctx.message.from.first_name}</b> üëã,\n–¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n`
        + '/help - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥\n'
        + '/covid - –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∑–∞–ø—Ä–æ—Å–∞', { parse_mode: 'HTML' })
    })

    const inlineCovidCommandKeyboard = Markup.inlineKeyboard([
      [Markup.callbackButton('–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É', 'allcountriesStats')],
      [Markup.callbackButton('–†–æ—Å—Å–∏—è', 'russia'), Markup.callbackButton('–°–®–ê', 'us')],
      [Markup.callbackButton('–ü–∞–∫–∏—Å—Ç–∞–Ω', 'pakistan'), Markup.callbackButton('–ò—Ç–∞–ª–∏—è', 'italy')],
      [Markup.callbackButton('–î—Ä—É–≥–∞—è —Å—Ç—Ä–∞–Ω–∞', 'noCountryInList'), Markup.callbackButton('–í –Ω–∞—á–∞–ª–æ', 'start')],
    ]).extra()

    stats.action('covid', (ctx) => {
      ctx.telegram.sendMessage(
        ctx.from.id,
        '–ö–∞–∫—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å?',
        inlineCovidCommandKeyboard,
      )
    })

    return stats
  }
}

module.exports = ScenesGenerator
